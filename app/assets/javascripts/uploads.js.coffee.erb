jQuery ->

  uploaderHost = "http://fanhelp.mvp.s3.amazonaws.com"

  xhrUploadProgressSupported = () ->
    xhr = new XMLHttpRequest()
    xhr && ('upload' of xhr) && ('onprogress' of xhr.upload)


  # Can only track progress if size property is present on files.
  progressSupported = xhrUploadProgressSupported()


  $('.uploading_files').on 'click', '.uploading_file .remove_link', (e) ->
    uuid = $(this).parent().data('uuid')
    $(this).parent().remove()
    $('.uploader:visible iframe')[0].contentWindow.postMessage(JSON.stringify({ eventType: 'abort upload', uuid: uuid }), uploaderHost);

  $(window).on "message", (event) ->

    event = event.originalEvent

    if event.origin != uploaderHost
      return

    data = JSON.parse(event.data)

    eventType = data.eventType
    delete data.eventType

    switch eventType

      when 'add upload'
        $uploader = $(data.uploader_id)
        $uploader = $('div.no-file').filter(':first') unless $uploader
        $uploader.removeClass('no-file')
        
        if progressSupported
          $uploader.addClass('uploading-with-progress')
        else
          $uploader.addClass('uploading-with-spinner')

      when 'upload progress'
        if progressSupported
          $('.file-uploading .progress').css('width', (data.progress / 100) * 270)

      when 'upload done'
        $uploader = $('.uploading-with-progress, .uploading-with-spinner')
        $uploader.removeClass('uploading-with-progress').addClass('uploaded-file')

        s3Dir = "https://s3.amazonaws.com/fanhelp.mvp"
        <% if Rails.env == 'production' %>
        basePath = s3Dir
        <% else %>
        basePath = ""
        <% end %>

        if video = $uploader.find('video')[0]
          video.src = "#{basePath}/#{data.s3_key}"
          video.load()
          $.ajax $uploader.find('iframe').data('create-resource-url'),
            type: 'POST',
            data: data
        if $box = $uploader.find('.profile-photo-box')
          # Update the image preview with the image uploaded, so that there's immediate feedback
          # (at this point, the image hasn't been processed and cropped by CarrierWave yet, so we can't yet show that image)
          $box.closest('.picture-box').removeClass('no-file')
          $box.find('#edit-thumbnail-processing').show()
          $box.find('#edit-thumbnail-button').hide()
          $img = $('<img>').attr('src',"#{s3Dir}/#{data.s3_key}").attr('width',240).attr('height',240).addClass('profile-photo-square')
          $box.find('img').remove()
          $box.prepend($img)
          $.ajax $uploader.find('iframe').data('create-resource-url'),
            type: 'POST',
            data: data
            success: (response, status, xhr) ->
              $box.find('#edit-thumbnail-button').show()
              $box.find('#edit-thumbnail-processing').hide()
              # Now the image has been processed by CarrierWave, we can update the image with the cropped version
              croppedUrl = data.s3_key.replace(data.file_name, "cropped_#{data.file_name}")
              $img = $('<img>').attr('src',"#{basePath}/#{croppedUrl}").attr('width',240).attr('height',240).addClass('profile-photo-square')
              $box.find('img').remove()
              $box.prepend($img)
              $response = $(response)
              Application.bindJcrop($response)
              $('#edit-thumbnail').html($response)

